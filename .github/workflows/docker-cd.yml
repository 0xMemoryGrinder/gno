name: docker cd

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:


concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # Check if the ref is a tag (in case of manual trigger), and get the tag name
  is-ref-tag:
    runs-on: ubuntu-latest
    outputs:
      is-tag: ${{ steps.is-tag.outputs.is-tag }}
      tag: ${{ steps.tag-name.outputs.tag }}
    steps:
      - name: Check if ref is a tag
        id: is-tag
        run: echo is-tag=$(echo "${{ github.ref }}" | grep -q "refs/tags/.*" && echo true || echo false) >> $GITHUB_OUTPUT
      - name: print error message
        if: steps.is-tag.outputs.is-tag == 'false'
        run: echo "::error title=Ref is not a tag::Please select a tag and not a branch when launching manually" && exit 1
      - name: Get tag name
        id: tag-name
        if: steps.is-tag.outputs.is-tag == 'true'
        run: echo tag=$(echo "${{ github.ref }}" | sed 's/refs\/tags\///') >> $GITHUB_OUTPUT

  build-main:
    runs-on: ubuntu-latest
    needs: is-ref-tag
    if: needs.is-ref-tag.outputs.is-tag == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: (github.event_name != 'pull_request')
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ needs.is-ref-tag.outputs.tag }}

  build-slim:
    runs-on: ubuntu-latest
    needs: is-ref-tag
    if: needs.is-ref-tag.outputs.is-tag == 'true'
    strategy:
      matrix:
        target: [ gnoland-slim, gnokey-slim, gno-slim, gnofaucet-slim, gnoweb-slim ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: (github.event_name != 'pull_request')
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          target: ${{ matrix.target }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/${{ matrix.target }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/${{ matrix.target }}:${{ needs.is-ref-tag.outputs.tag }}
